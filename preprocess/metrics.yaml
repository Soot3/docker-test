name: Get model metrics
inputs:
- {name: data, type: String}
outputs:
- {name: dat, type: String}
implementation:
  container:
    image: tensorflow/tensorflow:latest-gpu-py3
    command:
    - sh
    - -c
    - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
      'pandas==0.23.4' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet
      --no-warn-script-location 'pandas==0.23.4' --user) && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp)
      echo -n "$0" > "$program_path"
      python3 -u "$program_path" "$@"
    - |
      def _make_parent_dirs_and_return_path(file_path: str):
          import os
          os.makedirs(os.path.dirname(file_path), exist_ok=True)
          return file_path

      def get_model_metrics(data_path, dat_path):
          import sys, subprocess
          subprocess.run([sys.executable, "-m", "pip", "install", "scikit-learn==0.22"])
          subprocess.run([sys.executable, "-m", "pip", "install", "numpy"])
          subprocess.run([sys.executable, "-m", "pip", "install", "pandas"])
          import numpy as np
          import pandas as pd
          import pickle
          from tensorflow import keras
          with open(data_path,'rb') as f:
              data = pickle.load(f)
          model = keras.models.load_model(f'{data_path}/{model_file}')
          score = model.evaluate(data['test']['X'], data['test']['y'], verbose=1)

          print("Test Score:", score[0])
          print("Test Accuracy:", score[1])

          metrics = {"Test score":score[0],"Test Accuracy": score[1]}

          with open(dat_path,'w') as result:
              result.write(f'Summary: {metrics}')
          return (print("Done!"))

      import argparse
      _parser = argparse.ArgumentParser(prog='Get model metrics', description='')
      _parser.add_argument("--data", dest="data_path", type=str, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--dat", dest="dat_path", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
      _parsed_args = vars(_parser.parse_args())

      _outputs = get_model_metrics(**_parsed_args)
    args:
    - --data
    - {inputPath: data}
    - --dat
    - {outputPath: dat}
